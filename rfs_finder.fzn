array [1..16] of var 0..1: grid :: output_array([1..4, 1..4]);
constraint int_lin_eq([-1, -1, -1, -1], [grid[1], grid[4], grid[13], grid[16]], -1);
constraint int_lin_eq([-1, -1, -1, -1], [grid[2], grid[8], grid[9], grid[15]], -1);
constraint int_lin_eq([-1, -1, -1, -1], [grid[3], grid[5], grid[12], grid[14]], -1);
constraint int_lin_eq([-1, -1, -1, -1], [grid[6], grid[7], grid[10], grid[11]], -1);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[2], grid[5], grid[6]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[2], grid[9], grid[10]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[2], grid[13], grid[14]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[3], grid[5], grid[7]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[3], grid[9], grid[11]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[3], grid[13], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[4], grid[5], grid[8]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[4], grid[9], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[1], grid[4], grid[13], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[3], grid[6], grid[7]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[3], grid[10], grid[11]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[3], grid[14], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[4], grid[6], grid[8]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[4], grid[10], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[2], grid[4], grid[14], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[3], grid[4], grid[7], grid[8]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[3], grid[4], grid[11], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[3], grid[4], grid[15], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[6], grid[9], grid[10]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[6], grid[13], grid[14]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[7], grid[9], grid[11]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[7], grid[13], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[8], grid[9], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[5], grid[8], grid[13], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[6], grid[7], grid[10], grid[11]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[6], grid[7], grid[14], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[6], grid[8], grid[10], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[6], grid[8], grid[14], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[7], grid[8], grid[11], grid[12]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[7], grid[8], grid[15], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[9], grid[10], grid[13], grid[14]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[9], grid[11], grid[13], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[9], grid[12], grid[13], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[10], grid[11], grid[14], grid[15]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[10], grid[12], grid[14], grid[16]], 3);
constraint int_lin_le([1, 1, 1, 1], [grid[11], grid[12], grid[15], grid[16]], 3);
solve satisfy;
