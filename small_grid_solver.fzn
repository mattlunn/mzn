var bool: BOOL____00001 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00002 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00003 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00005 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00006 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00008 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00009 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00011 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00012 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00014 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00015 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00017 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00018 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00020 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00021 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00022 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00024 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00025 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00027 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00028 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00030 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00031 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00033 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00034 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00036 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00037 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00038 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00040 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00041 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00043 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00044 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00046 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00047 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00049 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00050 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00051 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00053 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00054 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00056 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00057 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00059 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00060 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00061 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00063 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00064 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00066 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00067 :: is_defined_var :: var_is_introduced;
var bool: BOOL____00068 :: is_defined_var :: var_is_introduced;
array [1..14] of var 1..4: grid :: output_array([1..2, 1..7]);
constraint array_bool_and([BOOL____00002, BOOL____00003, BOOL____00001, BOOL____00002], false);
constraint array_bool_and([BOOL____00006, BOOL____00003, BOOL____00005, BOOL____00006], false);
constraint array_bool_and([BOOL____00009, BOOL____00003, BOOL____00008, BOOL____00009], false);
constraint array_bool_and([BOOL____00012, BOOL____00003, BOOL____00011, BOOL____00012], false);
constraint array_bool_and([BOOL____00015, BOOL____00003, BOOL____00014, BOOL____00015], false);
constraint array_bool_and([BOOL____00018, BOOL____00003, BOOL____00017, BOOL____00018], false);
constraint array_bool_and([BOOL____00021, BOOL____00022, BOOL____00020, BOOL____00021], false);
constraint array_bool_and([BOOL____00025, BOOL____00022, BOOL____00024, BOOL____00025], false);
constraint array_bool_and([BOOL____00028, BOOL____00022, BOOL____00027, BOOL____00028], false);
constraint array_bool_and([BOOL____00031, BOOL____00022, BOOL____00030, BOOL____00031], false);
constraint array_bool_and([BOOL____00034, BOOL____00022, BOOL____00033, BOOL____00034], false);
constraint array_bool_and([BOOL____00037, BOOL____00038, BOOL____00036, BOOL____00037], false);
constraint array_bool_and([BOOL____00041, BOOL____00038, BOOL____00040, BOOL____00041], false);
constraint array_bool_and([BOOL____00044, BOOL____00038, BOOL____00043, BOOL____00044], false);
constraint array_bool_and([BOOL____00047, BOOL____00038, BOOL____00046, BOOL____00047], false);
constraint array_bool_and([BOOL____00050, BOOL____00051, BOOL____00049, BOOL____00050], false);
constraint array_bool_and([BOOL____00054, BOOL____00051, BOOL____00053, BOOL____00054], false);
constraint array_bool_and([BOOL____00057, BOOL____00051, BOOL____00056, BOOL____00057], false);
constraint array_bool_and([BOOL____00060, BOOL____00061, BOOL____00059, BOOL____00060], false);
constraint array_bool_and([BOOL____00064, BOOL____00061, BOOL____00063, BOOL____00064], false);
constraint array_bool_and([BOOL____00067, BOOL____00068, BOOL____00066, BOOL____00067], false);
constraint int_eq_reif(grid[2], grid[1], BOOL____00001) :: defines_var(BOOL____00001);
constraint int_eq_reif(grid[3], grid[1], BOOL____00005) :: defines_var(BOOL____00005);
constraint int_eq_reif(grid[3], grid[2], BOOL____00020) :: defines_var(BOOL____00020);
constraint int_eq_reif(grid[4], grid[1], BOOL____00008) :: defines_var(BOOL____00008);
constraint int_eq_reif(grid[4], grid[2], BOOL____00024) :: defines_var(BOOL____00024);
constraint int_eq_reif(grid[4], grid[3], BOOL____00036) :: defines_var(BOOL____00036);
constraint int_eq_reif(grid[5], grid[1], BOOL____00011) :: defines_var(BOOL____00011);
constraint int_eq_reif(grid[5], grid[2], BOOL____00027) :: defines_var(BOOL____00027);
constraint int_eq_reif(grid[5], grid[3], BOOL____00040) :: defines_var(BOOL____00040);
constraint int_eq_reif(grid[5], grid[4], BOOL____00049) :: defines_var(BOOL____00049);
constraint int_eq_reif(grid[6], grid[1], BOOL____00014) :: defines_var(BOOL____00014);
constraint int_eq_reif(grid[6], grid[2], BOOL____00030) :: defines_var(BOOL____00030);
constraint int_eq_reif(grid[6], grid[3], BOOL____00043) :: defines_var(BOOL____00043);
constraint int_eq_reif(grid[6], grid[4], BOOL____00053) :: defines_var(BOOL____00053);
constraint int_eq_reif(grid[6], grid[5], BOOL____00059) :: defines_var(BOOL____00059);
constraint int_eq_reif(grid[7], grid[1], BOOL____00017) :: defines_var(BOOL____00017);
constraint int_eq_reif(grid[7], grid[2], BOOL____00033) :: defines_var(BOOL____00033);
constraint int_eq_reif(grid[7], grid[3], BOOL____00046) :: defines_var(BOOL____00046);
constraint int_eq_reif(grid[7], grid[4], BOOL____00056) :: defines_var(BOOL____00056);
constraint int_eq_reif(grid[7], grid[5], BOOL____00063) :: defines_var(BOOL____00063);
constraint int_eq_reif(grid[7], grid[6], BOOL____00066) :: defines_var(BOOL____00066);
constraint int_eq_reif(grid[8], grid[1], BOOL____00003) :: defines_var(BOOL____00003);
constraint int_eq_reif(grid[9], grid[2], BOOL____00022) :: defines_var(BOOL____00022);
constraint int_eq_reif(grid[9], grid[8], BOOL____00002) :: defines_var(BOOL____00002);
constraint int_eq_reif(grid[10], grid[3], BOOL____00038) :: defines_var(BOOL____00038);
constraint int_eq_reif(grid[10], grid[8], BOOL____00006) :: defines_var(BOOL____00006);
constraint int_eq_reif(grid[10], grid[9], BOOL____00021) :: defines_var(BOOL____00021);
constraint int_eq_reif(grid[11], grid[4], BOOL____00051) :: defines_var(BOOL____00051);
constraint int_eq_reif(grid[11], grid[8], BOOL____00009) :: defines_var(BOOL____00009);
constraint int_eq_reif(grid[11], grid[9], BOOL____00025) :: defines_var(BOOL____00025);
constraint int_eq_reif(grid[11], grid[10], BOOL____00037) :: defines_var(BOOL____00037);
constraint int_eq_reif(grid[12], grid[5], BOOL____00061) :: defines_var(BOOL____00061);
constraint int_eq_reif(grid[12], grid[8], BOOL____00012) :: defines_var(BOOL____00012);
constraint int_eq_reif(grid[12], grid[9], BOOL____00028) :: defines_var(BOOL____00028);
constraint int_eq_reif(grid[12], grid[10], BOOL____00041) :: defines_var(BOOL____00041);
constraint int_eq_reif(grid[12], grid[11], BOOL____00050) :: defines_var(BOOL____00050);
constraint int_eq_reif(grid[13], grid[6], BOOL____00068) :: defines_var(BOOL____00068);
constraint int_eq_reif(grid[13], grid[8], BOOL____00015) :: defines_var(BOOL____00015);
constraint int_eq_reif(grid[13], grid[9], BOOL____00031) :: defines_var(BOOL____00031);
constraint int_eq_reif(grid[13], grid[10], BOOL____00044) :: defines_var(BOOL____00044);
constraint int_eq_reif(grid[13], grid[11], BOOL____00054) :: defines_var(BOOL____00054);
constraint int_eq_reif(grid[13], grid[12], BOOL____00060) :: defines_var(BOOL____00060);
constraint int_eq_reif(grid[14], grid[8], BOOL____00018) :: defines_var(BOOL____00018);
constraint int_eq_reif(grid[14], grid[9], BOOL____00034) :: defines_var(BOOL____00034);
constraint int_eq_reif(grid[14], grid[10], BOOL____00047) :: defines_var(BOOL____00047);
constraint int_eq_reif(grid[14], grid[11], BOOL____00057) :: defines_var(BOOL____00057);
constraint int_eq_reif(grid[14], grid[12], BOOL____00064) :: defines_var(BOOL____00064);
constraint int_eq_reif(grid[14], grid[13], BOOL____00067) :: defines_var(BOOL____00067);
solve satisfy;
